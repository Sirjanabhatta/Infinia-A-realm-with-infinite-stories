## Renpy Snippets
'.source.renpy':
  'Label':
    type: 'property'
    rightLabel: 'Class'
    prefix: 'label'
    body: 'label ${1:label_name}:\n\t${2:}'
    description: 'Create a new label \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/label.html'
    leftLabelHTML: '<span title="Story flow" class="renpy-snippet storyflow">S</span>'
  'Jump':
    prefix: 'jump'
    body: 'jump ${1:label_name}'
    description: 'Jump to a label \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/label.html#jump-statement'
    leftLabelHTML: '<span title="Story flow" class="renpy-snippet storyflow">S</span>'
  'Call':
    prefix: 'call'
    body: 'call ${1:label_name}'
    description: 'Call a label \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/label.html#jump-statement'
    leftLabelHTML: '<span title="Story flow" class="renpy-snippet storyflow">S</span>'
  'Pause':
    prefix: 'pause'
    body: 'with Pause($1)\n$2'
    description: 'Wait a few seconds before showing the next screen \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/transitions.html#Pause'
    leftLabelHTML: '<span title="Ren\'Py Statement" class="renpy-snippet renpy-statement">R</span>'
  'One Line Python':
    prefix: 'p1'
    body: '$ ${1:#python statements}'
    description: 'Execute a single line of Python\n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/python.html#one-line-python-statement'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Python in Block':
    prefix: 'py'
    body: 'python:\n\t${1:}'
    description: 'The python statement takes a block of python code \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/python.html'
    leftLabelHTML: '<span title="Python block" class="renpy-snippet python-block">Py</span>'
  'Init Block':
    prefix: 'init'
    body: 'init ${1:#priority number}:\n\t${2:}'
    description: 'Run code at initialization time \n- Click in "More..." for doc info.'
    descriptionMoreURL: 'https://www.renpy.org/doc/html/python.html#init-python-statement'
    leftLabelHTML: '<span title="Init block" class="renpy-snippet init-block">I</span>'
  'Init with Python Block':
    prefix: 'inipy'
    body: 'init ${1:#priority number} python:\n\t${2:}'
    leftLabelHTML: '<span title="Init block" class="renpy-snippet init-block">I</span>'
  'Create a Character':
    prefix: 'char'
    body: 'define ${1:character_name} = Character("${2:displayable name}")'
    leftLabelHTML: '<span title="Ren\'Py Statement" class="renpy-snippet renpy-statement">R</span>'
  'Create a Character (NVL)':
    prefix: 'charnvl'
    body: 'define ${1:character_name} = Character(None, kind=nvl)\n${2:}'
    leftLabelHTML: '<span title="Ren\'Py Statement" class="renpy-snippet renpy-statement">R</span>'
  'PreDefined Transitions':
    prefix: 'transitions'
    body: '${1:fade, dissolve, pixellate, move,\nmoveinright (Also: moveinleft, moveintop, moveinbottom),\nmoveoutright (Also: moveoutleft, moveouttop, moveoutbottom),\nease (Also: easeinright, easeinleft, easeintop, easeinbottom, easeoutright, easeoutleft, easeouttop, easeoutbottom),\nzoomin, zoomout, zoominout, vpunch, hpunch, blinds, squares,\nwipeleft (Also: wiperight, wipeup, wipedown),\nslideleft (Also:  slideright, slideup, slidedown),\nslideawayleft (Also: slideawayright, slideawayup, slideawaydown),\nirisin, irisout.}'
    leftLabelHTML: '<span title="Help" class="renpy-snippet renpy-help">?</span>'
## Init Block
  'Create MultiPersistent':
    prefix: 'multipersist'
    body: '${1:persistent_name} = MultiPersistent("${2:persistent_filename}")'
    leftLabelHTML: '<span title="May requires an Init block" class="renpy-snippet init-block">I</span>'
## Python one-line
  'Variable(Create/Modify)':
    prefix: 'var'
    body: '$ ${1:variable_name} = ${2:# variable value}'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Variable(Create/Modify) ':
    prefix: '$'
    body: '$ ${1:variable_name} = ${2:# variable value}'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Renpy Pause':
    prefix: 'rpause'
    body: '$ renpy.pause($1)\n$2'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Movie Cutscene':
    prefix: 'cutscene'
    body: '$ renpy.movie_cutscene(\'${1:file_name.extension}\')'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Save Persistent':
    prefix: 'persist'
    body: '$ persistent.${1:attribute_name} = ${2:# variable value}'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
  'Save MultiPersistent':
    prefix: 'multisave'
    body: '$ ${1:persistent_name}.save()'
    leftLabelHTML: '<span title="One-line Python" class="renpy-snippet oneline-py">$</span>'
## Transitions
  'Fade':
    prefix: 'wFade'
    body: 'with fade'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Dissolve':
    prefix: 'wDissolve'
    body: 'with dissolve'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Pixellate':
    prefix: 'wPixel'
    body: 'with pixellate'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Move':
    prefix: 'wMove'
    body: 'with move'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Move in Right':
    prefix: 'wMoveInRight'
    body: 'with moveinright'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Move in Left':
    prefix: 'wMoveInLeft'
    body: 'with moveinleft'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Move in Top':
    prefix: 'wMoveInTop'
    body: 'with moveintop'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
  'Move in Bottom':
    prefix: 'wMoveInBottom'
    body: 'with moveinbottom'
    leftLabelHTML: '<span title="Transition" class="renpy-snippet renpy-transition">T</span>'
# Built-in Python/Ren'Py
  'If (Conditional Statement)':
    prefix: 'if'
    body: 'if ${1:condition}:\n\t${2:#block of code to run}'
    leftLabelHTML: '<span title="Conditional Statement" class="renpy-snippet renpy-conditional">C</span>'
  'Else If (Conditional Statement)':
    prefix: 'elif'
    body: 'elif ${1:condition}:\n\t${2:#block of code to run}'
    leftLabelHTML: '<span title="Conditional Statement" class="renpy-snippet renpy-conditional">C</span>'
  'Else (Conditional Statement)':
    prefix: 'else'
    body: 'else:\n\t${1:#block of code to run}'
    leftLabelHTML: '<span title="Conditional Statement" class="renpy-snippet renpy-conditional">C</span>'
  'While (Loop)':
    prefix: 'while'
    body: 'while ${1:condition}:\n\t${2:#block of code to run}'
    leftLabelHTML: '<span title="Conditional Statement" class="renpy-snippet renpy-conditional">C</span>'
# Choice Menus
  'Choice Menu':
    prefix: 'menu'
    body: 'menu ${1:optional_name}:\n\t"${2:Say Statement}"\n\t"${3:Choice 1}":\n\t\t#block of code to run\n\t"${4:Choice 2}":\n\t\t#block of code to run\n\t${5:}'
    leftLabelHTML: '<span title="Story flow" class="renpy-snippet storyflow">S</span>'
  'Menu Choice':
    prefix: 'choice'
    body: '"${1:Choice N}":\n\t${2:#block of code to run}\n\t$3'
    leftLabelHTML: '<span title="Story flow" class="renpy-snippet storyflow">S</span>'
# Ren'Py Docs
  'Ren\'Py Docs':
    prefix: 'dochelp'
    body: """
        ## Visit the site for documentation or help of Ren\'Py engine. ##
        ## Documentation:
        \t"${1:http://www.renpy.org/doc/html/}"
        ## Wiki-Old Documentation:
        \t"${2:http://www.renpy.org/wiki/renpy/Wiki_Home_Page}"
        ## Forum:
        \t"${3:http://lemmasoft.renai.us/forums/viewforum.php?f=42}"
        ## Package Documentation:
        \t"${4:https://github.com/renpy/language-renpy#getting-started}"
        """
    description: 'Show docs/useful urls'
    descriptionMoreURL: 'http://www.renpy.org/doc/html/'
    leftLabelHTML: '<span title="Help" class="renpy-snippet renpy-help">?</span>'
## Python Block
# Assert (hidden)
  'Assert Equal':
    prefix: ',ase'
    body: 'self.assertEqual(${1:expected}, ${2:actual}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Not Equal':
    prefix: ',asne'
    body: 'self.assertNotEqual(${1:expected}, ${2:actual}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Raises':
    prefix: ',asr'
    body: 'self.assertRaises(${1:exception}, ${2:callable})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert True':
    prefix: ',ast'
    body: 'self.assertTrue(${1:actual}${2:, \'${3:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert False':
    prefix: ',asf'
    body: 'self.assertFalse(${1:actual}${2:, \'${3:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Is':
    prefix: ',asi'
    body: 'self.assertIs(${1:expected}, ${2:actual}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Is Not':
    prefix: ',asint'
    body: 'self.assertIsNot(${1:expected}, ${2:actual}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Is None':
    prefix: ',asino'
    body: 'self.assertIsNone(${1:actual}${2:, \'${3:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Is Not None':
    prefix: ',asinno'
    body: 'self.assertIsNotNone(${1:actual}${2:, \'${3:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert In':
    prefix: ',asin'
    body: 'self.assertIn(${1:needle}, ${2:haystack}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert Not In':
    prefix: ',asni'
    body: 'self.assertNotIn(${1:needle}, ${2:haystack}${3:, \'${4:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Assert':
    prefix: ',as'
    body: 'self.assert_(${1:boolean expression}${2:, \'${3:message}\'})$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Fail (a test)':
    prefix: 'fail'
    body: 'self.fail(\'${1:message}\')$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
# Class
  'New Class':
    prefix: 'class'
    body: 'class ${1:ClassName}(${2:object}):\n\t"""${3:docstring for $1}"""\n\tdef __init__(self, ${4:arg}):\n\t\t${5:super($1, self).__init__()}\n\t\tself.arg = arg\n\t\t$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'New Method':
    prefix: 'defs'
    body: 'def ${1:mname}(self, ${2:arg}):\n\t${3:pass}'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'New Function':
    prefix: 'def'
    body: 'def ${1:fname}(${2:arg}):\n\t${3:pass}'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'New Property':
    prefix: 'property'
    body: 'def ${1:foo}():\n    doc = "${2:The $1 property.}"\n    def fget(self):\n        ${3:return self._$1}\n    def fset(self, value):\n        ${4:self._$1 = value}\n    def fdel(self):\n        ${5:del self._$1}\n    return locals()\n$1 = property(**$1())$0'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
# Others
  'For (Loop)':
    prefix: 'for'
    body: 'for ${1:value} in ${2:variable}:\n\t${3:pass}'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Try/Except':
    prefix: 'try'
    body: 'try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'List Comprehension':
    prefix: 'lc'
    body: '[${1:value} for ${2:value} in ${3:variable}]'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'List Comprehension If Else':
    prefix: 'lcie'
    body: '[${1:value} if ${2:condition} else ${3:condition} for ${4:value} in ${5:variable}]'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'Dictionary Comprehension':
    prefix: 'dc'
    body: '{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:variable}}'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'PDB set trace':
    prefix: 'pdb'
    body: 'import pdb; pdb.set_trace()\n'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  'iPDB set trace':
    prefix: 'ipdb'
    body: 'import ipdb; ipdb.set_trace()\n'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'
  '__magic__':
    prefix: '__'
    body: '__${1:init}__'
    leftLabelHTML: '<span title="This requires a Python block" class="renpy-snippet python-block">Py</span>'


# Text Tags
  'Anchor Tag':
    prefix: 'a'
    body: '{a=${1:url}}$2{/a}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Alpha Tag':
    prefix: 'al'
    body: '{alpha=${1:alpha value}}$2{/alpha}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Bold Tag':
    prefix: 'b'
    body: '{b}$1{/b}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Color Tag':
    prefix: 'c'
    body: '{color=${1:color code}}$2{/color}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Characters per second Tag':
    prefix: 'cp'
    body: '{cps=${1:characters per second}}$2{/cps}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Font Tag':
    prefix: 'f'
    body: '{font=${1:font file}}$2{/font}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Italics Tag':
    prefix: 'i'
    body: '{i}$1{/i}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Kerning Tag':
    prefix: 'k'
    body: '{k=${1:adjust value}}$2{/k}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Image Tag':
    prefix: 'im'
    body: '{image=${1:image file}}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Strikethrough Tag':
    prefix: 's'
    body: '{s}$1{/s}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Ruby Text Top Tag':
    prefix: 'rt'
    body: '{rt}$1{/rt}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Ruby Text Bottom Tag':
    prefix: 'rb'
    body: '{rb}$1{/rb}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Size Tag':
    prefix: 'si'
    body: '{size=${1:size value}}$2{/size}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Space Tag':
    prefix: 'sp'
    body: '{space=${1:space size}}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Underline Tag':
    prefix: 'u'
    body: '{u}$1{/u}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Vertical space Tag':
    prefix: 'v'
    body: '{vspace=${1:space size}}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Fast Tag':
    prefix: 'fa'
    body: '{fast}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'No-wait Tag':
    prefix: 'n'
    body: '{nw}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Paragraph Tag':
    prefix: 'p'
    body: '{p}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Wait Paragraph Tag':
    prefix: 'pp'
    body: '{p=${1:wait time}}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Wait Tag':
    prefix: 'w'
    body: '{w}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
  'Wait time Tag':
    prefix: 'ww'
    body: '{w=${1:wait time}}'
    leftLabelHTML: '<span title="Text tag" class="renpy-snippet renpy-texttag">T</span>'
